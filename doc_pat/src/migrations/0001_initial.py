# Generated by Django 3.1.2 on 2022-04-02 20:31

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import src.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comorbiditie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comorbiditie', models.CharField(default='', max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Procedure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('procedure', models.CharField(default='', max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('sal', models.CharField(choices=[('Mr.', 'Mr.'), ('Mrs.', 'Mrs.'), ('Miss', 'Miss'), ('Dr', 'Dr')], default='Mr.', max_length=20)),
                ('name', models.CharField(default='', max_length=200)),
                ('age', models.CharField(default='', max_length=10, validators=[src.models.only_int])),
                ('gender', models.CharField(choices=[('M', 'M'), ('F', 'F')], default='M', max_length=30)),
                ('email_id', models.EmailField(blank=True, max_length=254, null=True)),
                ('address', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('city', models.CharField(default='', max_length=200)),
                ('contact', models.CharField(default='', max_length=14, validators=[src.models.only_int])),
                ('referred_by', models.CharField(default='', max_length=50)),
                ('payment_mode', models.CharField(choices=[('Token', 'Token'), ('Follow Up', 'Follow Up'), ('FOC', 'FOC')], default='Token', max_length=50)),
                ('diagnosis', models.CharField(default='', max_length=1000)),
                ('prescription', models.TextField(blank=True, default='', null=True)),
                ('previous_prescription_data', models.TextField(blank=True, default='', null=True)),
                ('follow_up_days', models.IntegerField(choices=[(10, 10), (15, 15), (20, 20), (30, 30), (45, 45), (60, 60)], default=10)),
                ('comorbidities', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='src.comorbiditie')),
                ('procedure', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='src.procedure')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of birth')),
                ('aadhar', models.CharField(blank=True, max_length=1024, null=True, verbose_name='aadhar')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
